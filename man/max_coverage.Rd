% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/max_coverage.R
\name{max_coverage}
\alias{max_coverage}
\title{max_coverage}
\usage{
max_coverage(existing_facility = NULL, proposed_facility, user,
  distance_cutoff, n_added, n_solutions = 1, solver = "lpSolve")
}
\arguments{
\item{existing_facility}{data.frame containing the facilities that are already in existing, with columns names lat, and long.}

\item{proposed_facility}{data.frame containing the facilities that are being proposed, with column names lat, and long.}

\item{user}{data.frame containing the users of the facilities, along with column names lat, and long.}

\item{distance_cutoff}{numeric indicating the distance cutoff (in metres)
you are interested in. If a number is less than distance_cutoff, it will be
1, if it is greater than it, it will be 0.}

\item{n_added}{the maximum number of facilities to add.}

\item{n_solutions}{is the number of possible solutions to be returned. Default value is set to 1.}

\item{solver}{character default is lpSolve, but currently in development is a Gurobi solver}
}
\value{
returns
}
\description{
max_coverage solves the binary optimisation problem known as the "maximal covering location problem" as described by Church (http://www.geog.ucsb.edu/~forest/G294download/MAX_COVER_RLC_CSR.pdf). This package was implemented to make it easier to solve this problem in the context of the research initially presented by Chan et al (http://circ.ahajournals.org/content/127/17/1801.short) to identify ideal locations to place AEDs.
}

